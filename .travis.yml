# https://lint.travis-ci.org/
branches:
  only:
  - master
  - prod
  - test-travis
language: c
matrix:
  include:
    - os: linux
      dist: trusty
      sudo: false
      compiler: clang
      env: HB_CI_THREADS=4
    - os: linux
      dist: trusty
      sudo: false
      compiler: gcc
      env: HB_CI_THREADS=4
    - os: linux
      dist: trusty
      sudo: required
      compiler: i686-w64-mingw32-gcc
      env: HB_CI_THREADS=4
    - os: osx
      osx_image: xcode8.2
      compiler: clang
      env: HB_CI_THREADS=4
    - os: osx
      osx_image: xcode8.2
      compiler: i686-w64-mingw32-gcc
      env: HB_CI_THREADS=4
addons:
  apt:
    sources:
      - llvm-toolchain-trusty-3.9
      - ubuntu-toolchain-r-test
    packages:
      - clang-3.9
      - gcc-6
      - g++-6
      - firebird2.5-dev
     #- libcairo2-dev
      - libcups2-dev
      - libcurl4-openssl-dev
      - libfreeimage-dev
      - libgd2-xpm-dev
      - libgpm-dev
     #- libgs-dev
      - libicu-dev
      - libmagic-dev
      - libmysqlclient-dev
      - libncurses5-dev
      - libpq-dev
     #- libslang2-dev
      - unixodbc-dev
      - binutils-mingw-w64
      - gcc-mingw-w64
      - p7zip-full
      - gnupg-curl
      - dos2unix
      - realpath
before_install:
  - if [ "$TRAVIS_OS_NAME" = 'osx' ]; then
      brew update > /dev/null;
      brew install p7zip;
      if [ "$CC" = 'i686-w64-mingw32-gcc' ]; then
        brew install mingw-w64 jq osslsigncode dos2unix gpg coreutils;
        brew cask install wine-devel;
      else
        brew install cairo;
        brew install curl;
        brew install freeimage;
        brew install gd;
        brew install ghostscript;
        brew install icu4c;
        brew install libmagic;
        brew install mariadb;
        brew install openssl@1.1;
        brew install qt5;
        brew install s-lang;
        brew install unixodbc;
      fi;
    elif [ "$TRAVIS_OS_NAME" = 'linux' ] && [ "$TRAVIS_SUDO" = 'true' ]; then
      sudo dpkg --add-architecture i386;
      sudo apt-get update;
      sudo apt-get -yq --no-install-suggests --no-install-recommends --force-yes install wine;
    fi;
script:
  - if [ "$CC" = 'i686-w64-mingw32-gcc' ]; then
      export DISPLAY=:88.0;
      if [ "$TRAVIS_OS_NAME" = 'osx' ]; then
        export PATH="/Applications/Wine Devel.app/Contents/Resources/wine/bin:${PATH}";
        wineboot;
      fi;
      if ./package/mpkg_win_ci.sh; then
        mv -f harbour-snapshot-win.7z "harbour-snapshot-win-built-on-${TRAVIS_OS_NAME}.7z";
      fi;
    else
      if [ "$TRAVIS_OS_NAME" = 'linux' ]; then
        if [ "$CC" = 'gcc' ]; then
          export HB_CCSUFFIX=-6;
        else
          export HB_CCSUFFIX=-3.9;
        fi;
        export HB_USER_CFLAGS="${HB_USER_CFLAGS} -fstack-protector-strong";
      fi;
      export HB_USER_CFLAGS="${HB_USER_CFLAGS} -D_FORTIFY_SOURCE=2";
      ls -lA "$(dirname "$(which "${CC}${HB_CCSUFFIX}")")/${CC}"*;
      "${CC}${HB_CCSUFFIX}" -v;
      export HB_COMPILER=$CC && make -j "$HB_CI_THREADS";
    fi;
deploy:
  skip_cleanup: true
  provider: releases
  api_key: ${GITHUB_TOKEN}
  file: harbour-snapshot-win-built-on-${TRAVIS_OS_NAME}.7z
  prerelease: true
  overwrite: true
  on:
    branch: master
    condition: "$CC = i686-w64-mingw32-gcc"
notifications:
  email: false
git:
  submodules: false
  depth: 10
