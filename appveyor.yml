version: 3.4.{build}
branches:
  only:
  - master
  - test_appveyor
skip_tags: true
os: Windows Server 2012 R2
clone_depth: 8
clone_folder: C:\hb\
build:
  verbosity: detailed

environment:
  HB_VF: daily
  GITHUB_TOKEN:
    secure: EAvrbP8pR3X0XMvu+PtEpAsTS5hh7jWZl5T+6sLOuCUqmyTLxNY8P2JPYMidRbpf
  VIRUSTOTAL_APIKEY:
    secure: TdJYONfrpH45DuyKxraVqgHYy25IQ/F8TKHzYf+u5zz1aiM2yR0YTMaGxyj2EMReEearSI9kD9D2ZykybSVEbRyEaotZlceUb2lPDKELl3M=
  matrix:
#   - HB_COMPILER: msvc64
#   - HB_COMPILER: msvc
#   - HB_COMPILER: mingw64
    - HB_COMPILER: mingw

  OPENSSL_VER: 1.0.2e
  OPENSSL_HASH_32: 5247ef88294f873e81f31012e947fbb9cfc45ef5048070345cd0b25df5d0a4a3
  OPENSSL_HASH_64: 378c05aa9752a49619d092d3968382b1f03bceb4fb258b77b2e54c997cb038be
  CURL_VER: 7.46.0
  CURL_HASH_32: b8c2d7ab620b198aeabf9573ed63059bc28ea5921d008c267c16db7409fbc4cb
  CURL_HASH_64: e9bbd8d4fefe484f583c7abfc4ebd9cbd81bf2e49557fc21c72d0c46063d3681

install:
  # Use the _native_ curl build provided by Git for Windows because the default,
  # msys one in 'usr/bin' fails in spectacular ways in the PATCH request.
  - set PATH=C:\Program Files\Git\mingw64\bin;%PATH%
  - sh -c ./package/mpkg_win_dl.sh

build_script:
  - set HB_RT=%APPVEYOR_BUILD_FOLDER%
  - set HB_SFX_7Z=%HB_RT%\7zsfx\7zsd.sfx
  - set HB_DIR_7Z=%HB_RT%\7z\
  - set HB_DIR_UPX=%HB_RT%\upx\
  - set HB_DIR_MINGW=%HB_RT%\mingw64
  - set _ORI_PATH=%PATH%
  - if "%HB_COMPILER:~0,5%" == "mingw" set PATH=%HB_DIR_MINGW%\bin;%PATH%
  - if "%HB_COMPILER:~0,5%-%APPVEYOR_REPO_BRANCH%" == "mingw-lto" set HB_USER_CFLAGS=-flto -ffat-lto-objects
  - if "%HB_COMPILER%" == "mingw"   set HB_CPU=x86
  - if "%HB_COMPILER%" == "mingw64" set HB_CPU=x86_64
  - if "%HB_COMPILER%" == "msvc"   if exist "%ProgramFiles(x86)%\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" call "%ProgramFiles(x86)%\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" x86
  - if "%HB_COMPILER%" == "msvc"   if exist "%ProgramFiles(x86)%\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" call "%ProgramFiles(x86)%\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86
  - if "%HB_COMPILER%" == "msvc64" if exist "%ProgramFiles(x86)%\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" call "%ProgramFiles(x86)%\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" x86_amd64
  - if "%HB_COMPILER%" == "msvc64" if exist "%ProgramFiles(x86)%\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" call "%ProgramFiles(x86)%\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86_amd64
# - if "%HB_COMPILER:~0,4%" == "msvc" set _HB_MSVC_ANALYZE=yes
  - if "%HB_COMPILER%" == "mingw"   set HB_WITH_CURL=%HB_RT%\curl-%CURL_VER%-win32-mingw\include
  - if "%HB_COMPILER%" == "mingw"   set HB_WITH_OPENSSL=%HB_RT%\openssl-%OPENSSL_VER%-win32-mingw\include
# - if "%HB_COMPILER%" == "mingw"   set HB_WITH_QT=%HB_RT%\Qt\5.4\mingw491_32\include
  - if "%HB_COMPILER%" == "mingw64" set HB_WITH_CURL=%HB_RT%\curl-%CURL_VER%-win64-mingw\include
  - if "%HB_COMPILER%" == "mingw64" set HB_WITH_OPENSSL=%HB_RT%\openssl-%OPENSSL_VER%-win64-mingw\include
# - if "%HB_COMPILER%" == "msvc"    set HB_WITH_QT=%HB_RT%\Qt\5.4\msvc2013_64_opengl\include
# - if "%HB_COMPILER%" == "msvc64"  set HB_WITH_QT=%HB_RT%\Qt\5.4\msvc2013_64_opengl\include
  - if "%HB_COMPILER:~0,5%-%HB_BUILD_MODE%" == "mingw-cpp" set HB_USER_LDFLAGS=-static-libgcc -static-libstdc++
# - set HB_WITH_ADS=%HB_RT%\ads\acesdk
# - set HB_WITH_CAIRO=%HB_RT%\cairo\include\cairo
# - set HB_WITH_FIREBIRD=%HB_RT%\firebird\include
# - set HB_WITH_FREEIMAGE=%HB_RT%\freeimage\Dist
# - set HB_WITH_GD=%HB_RT%\gd\include
# - set HB_WITH_MYSQL=%HB_RT%\mariadb\include\mysql
# - set HB_WITH_OCILIB=%HB_RT%\ocilib\include
# - set HB_WITH_PGSQL=%HB_RT%\pgsql\include
# - set HB_BUILD_CONTRIBS=no
  - set HB_INSTALL_3RDDYN=yes
  - set HB_BUILD_STRIP=bin
  - set HB_BUILD_CONTRIB_DYN=yes
  - set HB_BUILD_PKG=yes
  - set HB_BUILD_POSTRUN=".\hbtest -noenv" ".\hbspeed --noenv --stdout"
  - set _HB_BUILD_PKG_ARCHIVE=no
# - set _HB_PKG_DEBUG=yes
  - win-make.exe clean install HB_VERSION=%HB_VF%
  - set HB_COMPILER=mingw64
  - set HB_CPU=x86_64
  - set HB_WITH_CURL=%HB_RT%\curl-%CURL_VER%-win64-mingw\include
  - set HB_WITH_OPENSSL=%HB_RT%\openssl-%OPENSSL_VER%-win64-mingw\include
  - win-make.exe clean install HB_VERSION=%HB_VF%
# - set HB_COMPILER=
# - set HB_CPU=
# - set HB_WITH_CURL=
# - set HB_WITH_OPENSSL=
# - set PATH=%_ORI_PATH%
# - call "%ProgramFiles(x86)%\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86
# - win-make.exe clean install HB_VERSION=%HB_VF%
# - set PATH=%_ORI_PATH%
# - call "%ProgramFiles(x86)%\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86_amd64
# - win-make.exe clean install HB_VERSION=%HB_VF%
  - sh -c ./package/mpkg_win.sh

artifacts:
  - path: harbour-daily-win.7z.exe
    name: pkg-win

before_deploy:
  - cmd: 'curl -sS -H "Authorization: token %GITHUB_TOKEN%" -X PATCH https://api.github.com/repos/vszakats/harbour-core/git/refs/tags/v3.4.0dev -d @git_tag_patch.json'

deploy:
  - provider: GitHub
    auth_token: $(github_token)
    tag: v3.4.0dev
    release: 'Harbour 3.4.0dev daily'
    description: 'Snapshot build generated after each commit.'
    artifact: pkg-win
    draft: false
    prerelease: true
    on:
      branch: master
      appveyor_repo_tag: false
  - provider: Local
    on:
      branch: test_appveyor

after_deploy:
  - if "%APPVEYOR_REPO_BRANCH%" == "master" curl -fsS -X POST https://www.virustotal.com/vtapi/v2/file/scan --form "apikey=%VIRUSTOTAL_APIKEY%" --form file=@harbour-daily-win.7z.exe
