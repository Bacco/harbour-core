diff -urN ed25519.orig/ed25519.h ed25519/ed25519.h
--- ed25519.orig/ed25519.h	2015-07-19 19:09:57.029196700 +0200
+++ ed25519/ed25519.h	2015-07-19 19:09:57.029196700 +0200
@@ -25,6 +25,7 @@
 #endif
 
 void ED25519_DECLSPEC ed25519_create_keypair(unsigned char *public_key, unsigned char *private_key, const unsigned char *seed);
+void ED25519_DECLSPEC ed25519_get_pubkey(unsigned char *public_key, const unsigned char *private_key);
 void ED25519_DECLSPEC ed25519_sign(unsigned char *signature, const unsigned char *message, size_t message_len, const unsigned char *public_key, const unsigned char *private_key);
 int ED25519_DECLSPEC ed25519_verify(const unsigned char *signature, const unsigned char *message, size_t message_len, const unsigned char *public_key);
 void ED25519_DECLSPEC ed25519_add_scalar(unsigned char *public_key, unsigned char *private_key, const unsigned char *scalar);
diff -urN ed25519.orig/sha512.h ed25519/sha512.h
--- ed25519.orig/sha512.h	2015-07-19 19:09:57.044795800 +0200
+++ ed25519/sha512.h	2015-07-19 19:09:57.044795800 +0200
@@ -1,21 +1,15 @@
 #ifndef SHA512_H
 #define SHA512_H
 
-#include <stddef.h>
+#include "hbcrypto.h"
 
 #include "fixedint.h"
 
 /* state */
-typedef struct sha512_context_ {
-    uint64_t  length, state[8];
-    size_t curlen;
-    unsigned char buf[128];
-} sha512_context;
-
-
-int sha512_init(sha512_context * md);
-int sha512_final(sha512_context * md, unsigned char *out);
-int sha512_update(sha512_context * md, const unsigned char *in, size_t inlen);
-int sha512(const unsigned char *message, size_t message_len, unsigned char *out);
+#define sha512_context hb_sha512_ctx
+#define sha512_init    hb_sha512_init
+#define sha512_final   hb_sha512_final
+#define sha512_update  hb_sha512_update
+#define sha512         hb_sha512
 
 #endif
diff -urN ed25519.orig/sign.c ed25519/sign.c
--- ed25519.orig/sign.c	2015-07-19 19:09:57.013597600 +0200
+++ ed25519/sign.c	2015-07-19 19:09:57.013597600 +0200
@@ -3,6 +3,12 @@
 #include "ge.h"
 #include "sc.h"
 
+void ed25519_get_pubkey(unsigned char *public_key, const unsigned char *private_key) {
+    ge_p3 A;
+
+    ge_scalarmult_base(&A, private_key);
+    ge_p3_tobytes(public_key, &A);
+}
 
 void ed25519_sign(unsigned char *signature, const unsigned char *message, size_t message_len, const unsigned char *public_key, const unsigned char *private_key) {
     sha512_context hash;
